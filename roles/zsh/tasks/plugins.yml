- name: Check if .oh-my-zsh exists
  tags: zsh, ohmyzsh
  stat:
    path: ~/.oh-my-zsh
  register: stat_oh_my_zsh_result

- name: Cloning oh-my-zsh
  tags: zsh, ohmyzsh
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh
    dest: ~/.oh-my-zsh
    clone: yes
  when: not stat_oh_my_zsh_result.stat.exists

- name: plugin zsh autosuggest
  tags: zsh, ohmyzsh
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: ~/.oh-my-zsh/plugins/zsh-autosuggestions
    clone: yes

- name: plugin zsh syntax highlighting
  tags: zsh, ohmyzsh
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: ~/.oh-my-zsh/plugins/zsh-syntax-highlighting
    clone: yes

- name: zsh | oh-my-zsh | clone zsh-nvm
  tags: zsh, ohmyzsh
  git:
    repo: https://github.com/lukechilds/zsh-nvm.git
    dest: ~/.oh-my-zsh/plugins/zsh-nvm
    clone: yes

- name: Check if .zshrc exists
  tags: zsh, ohmyzsh
  stat:
    path: ~/.zshrc
  register: stat_rc_result

- name: Delete current .zshrc
  tags: zsh, ohmyzsh
  file:
    state: absent
    path: ~/.zshrc
  when: not stat_rc_result.stat.exists

- name: Creating new ~/.zshrc
  tags: zsh, ohmyzsh
  copy:
    src=~/.oh-my-zsh/templates/zshrc.zsh-template
    dest=~/.zshrc

- name: replace plugin
  tags: zsh, ohmyzsh
  lineinfile:
    path: ~/.zshrc
    regexp: 'plugins=(git)'
    line: 'plugins=(aws git nvm npm zsh-syntax-highlighting zsh-autosuggestions)'
    backrefs: yes

- name: replace thema
  tags: zsh, ohmyzsh
  lineinfile:
    path: ~/.zshrc
    regexp: '^(.*)ZSH_THEME="robbyrussell"(.*)$'
    line: 'ZSH_THEME="agnoster"'
    backrefs: yes

- name: Enable ENABLE_CORRECTION
  tags: zsh, ohmyzsh
  lineinfile:
    path: ~/.zshrc
    regexp: '# ENABLE_CORRECTION="true"'
    line: 'ENABLE_CORRECTION="true"'
    backrefs: yes

- name: Enable COMPLETION_WAITING_DOTS
  tags: zsh, ohmyzsh
  lineinfile:
    path: ~/.zshrc
    regexp: '# COMPLETION_WAITING_DOTS="true"'
    line: 'COMPLETION_WAITING_DOTS="true"'
    backrefs: yes

- name: Dutch scheme in HIST_STAMPS
  tags: zsh, ohmyzsh
  lineinfile:
    path: ~/.zshrc
    regexp: '# HIST_STAMPS="mm/dd/yyyy"'
    line: 'HIST_STAMPS="mm-dd-yyyy"'
    backrefs: yes

- name: Add custom config in .zshrc
  tags: zsh, ohmyzsh
  blockinfile:
    dest: ~/.zshrc
    block: |
      # set path
      export PATH="/usr/local/bin:$PATH"

      # setup default editor
      if [[ -n $SSH_CONNECTION ]]; then
        export EDITOR='vim'
      else
        export EDITOR='nvim'
      fi

      # vim commands in shell
      bindkey -v

      # config nvm
      export NVM_DIR="{{ ansible_env.USER }}/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
      export PATH="/usr/local/bin:$PATH"

      # command output on next line
      PS1=$'\n'"$PS1"

      # run on start
      clear
      neofetch
    backup: yes

- name: put zsh default shell
  tags: zsh, ohmyzsh
  shell: chsh -s $(which zsh)

- name: reload zsh
  tags: zsh, ohmyzsh
  shell: source ~/.zshrc
  args:
    executable: /bin/bash
